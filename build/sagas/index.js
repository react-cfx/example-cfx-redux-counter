// Generated by CoffeeScript 2.0.0-beta2
var DECREMENT, DECREMENT_ASYNC, INCREMENT, INCREMENT_ASYNC, decrementAsync, delay, dispatch, incrementAsync, rootSaga;

import * as sagaEffects from 'redux-saga/effects';

import {
  default as constants
} from '../constants/index';

dispatch = function(action, actionType) {
  return sagaEffects.put(Object.assign({}, action, {
    type: actionType
  }));
};

delay = function(ms) {
  return new Promise(function(resolve) {
    return setTimeout(resolve, ms);
  });
};

({INCREMENT, INCREMENT_ASYNC, DECREMENT, DECREMENT_ASYNC} = constants.types);

incrementAsync = function*(action) {
  yield sagaEffects.call(delay, 1000);
  yield dispatch(action, INCREMENT);
};

decrementAsync = function*(action) {
  yield sagaEffects.call(delay, 1000);
  yield dispatch(action, DECREMENT);
};

rootSaga = [
  function*() {
    return (yield sagaEffects.takeLatest(INCREMENT_ASYNC, incrementAsync));
  }, function*() {
    return (yield sagaEffects.takeLatest(DECREMENT_ASYNC, decrementAsync));
  }
];

export default rootSaga;
