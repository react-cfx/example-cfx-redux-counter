// Generated by CoffeeScript 2.0.0-beta2
var DECREMENT, DECREMENT_ASYNC, INCREMENT, INCREMENT_ASYNC, assign, call, decrementAsync, delay, incrementAsync, put, rootSaga, takeEvery;

({assign} = Object);

import {
  saga,
  sagaEffects,
  dispatch
} from 'cfx.redux-saga';

({takeEvery} = saga);

({put, call} = sagaEffects);

import {
  default as constants
} from '../constants/index';

({INCREMENT, INCREMENT_ASYNC, DECREMENT, DECREMENT_ASYNC} = constants.types);

delay = function(ms) {
  return new Promise(function(resolve) {
    return setTimeout(resolve, ms);
  });
};

incrementAsync = function*(action) {
  yield call(delay, 1000);
  yield dispatch(action, INCREMENT);
};

decrementAsync = function*(action) {
  yield call(delay, 1000);
  yield dispatch(action, DECREMENT);
};

rootSaga = [
  function*() {
    return (yield* takeEvery(INCREMENT_ASYNC, incrementAsync));
  }, function*() {
    return (yield* takeEvery(DECREMENT_ASYNC, decrementAsync));
  }
];

export default rootSaga;
