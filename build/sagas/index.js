// Generated by CoffeeScript 1.10.0
var DECREMENT, DECREMENT_ASYNC, INCREMENT, INCREMENT_ASYNC, assign, call, constants, decrementAsync, delay, dispatch, incrementAsync, put, ref, ref1, rootSaga, saga, sagaEffects, takeEvery;

assign = Object.assign;

ref = require('cfx.redux-saga'), saga = ref.saga, sagaEffects = ref.sagaEffects, dispatch = ref.dispatch;

takeEvery = saga.takeEvery;

put = sagaEffects.put, call = sagaEffects.call;

constants = require('../constants/index');

ref1 = constants.types, INCREMENT = ref1.INCREMENT, INCREMENT_ASYNC = ref1.INCREMENT_ASYNC, DECREMENT = ref1.DECREMENT, DECREMENT_ASYNC = ref1.DECREMENT_ASYNC;

delay = function(ms) {
  return new Promise(function(resolve) {
    return setTimeout(resolve, ms);
  });
};

incrementAsync = function*(action) {
  (yield call(delay, 1000));
  (yield dispatch(action, INCREMENT));
};

decrementAsync = function*(action) {
  (yield call(delay, 1000));
  (yield dispatch(action, DECREMENT));
};

rootSaga = [
  function*() {
    return (yield* takeEvery(INCREMENT_ASYNC, incrementAsync));
  }, function*() {
    return (yield* takeEvery(DECREMENT_ASYNC, decrementAsync));
  }
];

module.exports = rootSaga;
